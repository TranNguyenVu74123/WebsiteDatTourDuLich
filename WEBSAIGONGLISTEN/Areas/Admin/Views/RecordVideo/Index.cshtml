@{
    ViewData["Title"] = "Ghi Hình Màn Hình";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container mt-4">
    <h2 class="text-center">@ViewData["Title"]</h2>
    <p class="text-center text-muted">Nhấn nút để bắt đầu ghi hình màn hình của bạn</p>

    <div class="record-container text-center">
        <!-- Nút bắt đầu ghi hình -->
        <button class="record-btn btn btn-primary">Bắt đầu ghi hình</button>

        <!-- Video hiển thị bản ghi -->
        <div class="video-preview mt-4">
            <video controls autoplay></video>
        </div>
    </div>
</div>

<!-- CSS -->
<style>
    .container {
        max-width: 800px;
    }

    .record-btn {
        font-size: 1.2rem;
        font-weight: bold;
        padding: 10px 20px;
        border-radius: 8px;
        cursor: pointer;
    }

    .video-preview video {
        width: 100%;
        max-height: 400px;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .text-center {
        font-family: Arial, sans-serif;
    }
</style>

<!-- JavaScript -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let btn = document.querySelector(".record-btn");
        let video = document.querySelector("video");

        if (!btn || !video) {
            console.error("Không tìm thấy nút hoặc video trong DOM.");
            return;
        }

        btn.addEventListener("click", async function () {
            try {
                let stream = await navigator.mediaDevices.getDisplayMedia({
                    video: true
                });

                const mime = MediaRecorder.isTypeSupported("video/webm; codecs=vp9")
                    ? "video/webm; codecs=vp9"
                    : "video/webm";

                let mediaRecorder = new MediaRecorder(stream, { mimeType: mime });
                let chunks = [];

                btn.textContent = "Đang ghi..."; // Thay đổi text nút
                btn.disabled = true; // Vô hiệu hóa nút khi đang ghi hình

                mediaRecorder.addEventListener("dataavailable", function (e) {
                    chunks.push(e.data);
                });

                mediaRecorder.addEventListener("stop", function () {
                    let blob = new Blob(chunks, { type: chunks[0].type });
                    let url = URL.createObjectURL(blob);

                    // Gán video URL để hiển thị
                    video.src = url;

                    // Tạo liên kết để tải video
                    let a = document.createElement("a");
                    a.href = url;
                    a.download = "ghi-hinh.webm";
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a); // Xóa liên kết sau khi tải

                    btn.textContent = "Bắt đầu ghi hình"; // Đặt lại text nút
                    btn.disabled = false; // Kích hoạt lại nút
                });

                // Bắt đầu ghi hình
                mediaRecorder.start();

                // Dừng ghi hình sau 10 giây
                setTimeout(() => {
                    mediaRecorder.stop();
                }, 10000); // Thời gian có thể điều chỉnh
            } catch (error) {
                console.error("Lỗi trong quá trình ghi hình:", error);
                alert("Ghi hình thất bại. Vui lòng kiểm tra quyền truy cập và thử lại.");
            }
        });
    });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
